// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id                 String          @id @default(cuid())
  username           String          @unique
  first_name         String
  last_name          String
  password           String
  level              String
  totalCoinsAchieved Int             @default(0)
  achievements       String[]        @default([])
  role               Role            @default(USER)
  userChallenges     UserChallenge[]
}

model Challenge {
  id             String          @id @default(cuid())
  title          String
  themeColor     String          @default("blue")
  titleIcon      String
  tags           String[]
  dueDate        DateTime
  coinsOffered   Int             @default(0)
  description    String
  reference      Json
  displayImage   String
  imageAlt       String
  platform       String
  lockStatus     String          @default("inactive")
  hints          String[]
  userChallenges UserChallenge[]
}

model UserChallenge {
  id               String    @id @default(cuid())
  user             User      @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId           String
  challenge        Challenge @relation(fields: [challengeId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  challengeId      String
  isGraded         Boolean   @default(false)
  pointsAwareded   Int       @default(0)
  submissionStatus String    @default("Pending")
  submission       String    @default("Pending")
  submissionDate   DateTime  @default(now())
}

enum Role {
  USER
  ADMIN
}
